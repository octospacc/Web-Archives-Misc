{"version":3,"sources":["webpack:///./src/pages/settings/saves-for-uploads.f7.html"],"names":["getSaves","saves","gameIDs","JSON","parse","localStorage","games","map","v","id","librarySaves","key","getItem","filter","Boolean","replace","hasOwnProperty","toLowerCase","includes","console","log","push","data","methods","handleUpload","el","document","createElement","type","style","display","addEventListener","evt","file","target","files","system","name","split","pop","reader","FileReader","buffer","Uint8Array","result","slice","byte","String","fromCharCode","join","showPopupForKey","sha1","then","hash","$app","dialog","alert","readAsArrayBuffer","body","appendChild","click","title","hasData","this","actions","create","buttons","text","label","onClick","contents","base64ToArray","blob","Blob","saveAs","Date","getTime","error","onchange","fileExtension","isDelta","indexOf","length","isEclipseSave","startsWith","readAsDataURL","onload","res","atob","setItem","stringify","toast","closeTimeout","open","removeChild","onerror","e","color","confirm","removeItem","$setState","bold","render","styleScoped"],"mappings":"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","file":"js/19.app.js","sourcesContent":["import { sha1 } from '../../js/cores';\nimport { base64ToArray } from '../../js/b64';\nfunction getSaves() {\n  let saves = [];\n  let gameIDs = JSON.parse(localStorage.games).map(v => JSON.parse(v).id);\n  let librarySaves = gameIDs.map(id => 'SAVE_' + id).map(key => localStorage.getItem(key)).filter(Boolean).map(key => ('SAVE_' + JSON.parse(key)).replace('SAVE_SAVE_', 'SAVE_'));\n  for (let key in localStorage) {\n    if (!localStorage.hasOwnProperty(key) || !key.toLowerCase().includes('sram') && !key.toLowerCase().includes('save') || key.toLowerCase().includes('save_type') || key === 'autoSave' || librarySaves.includes(key))\n      continue;\n    console.log(key, librarySaves.includes(key));\n    saves.push([\n      key,\n      localStorage[key]\n    ]);\n  }\n  saves = saves.filter(([key]) => !gameIDs.includes(key.replace('SAVE_', '')));\n  console.log(saves);\n  return { saves };\n}\nexport default {\n  data() {\n    return getSaves();\n  },\n  methods: {\n    handleUpload() {\n      const el = document.createElement('input');\n      el.type = 'file';\n      el.style.display = 'none';\n      el.addEventListener('change', evt => {\n        const file = evt.target.files[0];\n        let system = file.name.split('.').pop().toLowerCase();\n        const reader = new FileReader();\n        reader.addEventListener('load', evt => {\n          let buffer = new Uint8Array(evt.target.result);\n          let id;\n          let key;\n          if ([\n              'gb',\n              'gbc'\n            ].includes(system)) {\n            id = [...buffer.slice(308, 319)].map(byte => String.fromCharCode(byte)).join('');\n            key = 'B64_SRAM_' + id;\n            this.showPopupForKey(key, id, !!localStorage[key]);\n          } else if (system === 'gba') {\n            id = [...buffer.slice(172, 179)].map(byte => byte > 0 ? String.fromCharCode(byte) : '_').join('');\n            key = 'SAVE_GUID_' + id;\n            this.showPopupForKey(key, id, !!localStorage[key]);\n          } else if ([\n              'smc',\n              'sfc'\n            ].includes(system)) {\n            sha1(buffer).then(hash => {\n              id = hash;\n              key = 'SAVE_SNES_' + hash;\n              this.showPopupForKey(key, id, !!localStorage[key]);\n            });\n          } else {\n            this.$app.dialog.alert('No save data was found for that game.');\n          }\n        });\n        reader.readAsArrayBuffer(file);\n      });\n      document.body.appendChild(el);\n      el.click();\n    },\n    showPopupForKey(key, title, hasData = true) {\n      this.$app.actions.create({\n        buttons: [\n          [\n            {\n              text: title || 'Manage Save',\n              label: true\n            },\n            hasData && {\n              text: 'Export Save',\n              onClick: () => {\n                try {\n                  console.log(key);\n                  const contents = base64ToArray(JSON.parse(localStorage.getItem(key)));\n                  let buffer = new Uint8Array(contents);\n                  const blob = new Blob([buffer], { type: 'application/octet-stream' });\n                  saveAs(blob, `${ key } ${ new Date().getTime() }.sav`);\n                } catch (error) {\n                  console.log(error);\n                  this.$app.dialog.alert('An error occurred while trying to export that save...');\n                }\n              }\n            },\n            {\n              text: 'Import Save',\n              onClick: () => {\n                const el = document.createElement('input');\n                el.type = 'file';\n                el.onchange = evt => {\n                  let files = evt.target.files;\n                  let file = files[0];\n                  let fileExtension = file.name.split('.').pop().toLowerCase();\n                  let isDelta = file.name.indexOf('gamesave-') === 0 && file.name.indexOf('-gamesave') === file.name.length - 9;\n                  let isEclipseSave = fileExtension.startsWith('eclipsesave_');\n                  let isSave = fileExtension === 'sav' || isDelta;\n                  if (isEclipseSave || isSave) {\n                    const reader = new FileReader();\n                    reader.readAsDataURL(file);\n                    reader.onload = () => {\n                      if (isEclipseSave) {\n                        const res = JSON.parse(atob(reader.result.replace('data:;base64,', '').replace('data:text/plain;charset=x-user-defined;base64,', '').replace('data:application/octet-stream;base64,', '').replace('ï\\xBB\\xBF', '')));\n                        localStorage.setItem(key, JSON.stringify(res));\n                      } else {\n                        let res = reader.result.replace('data:;base64,', '').replace('data:text/plain;charset=x-user-defined;base64,', '').replace('data:application/octet-stream;base64,', '').replace('ï\\xBB\\xBF', '');\n                        localStorage.setItem(key, JSON.stringify(res));\n                      }\n                      this.$app.toast.create({\n                        text: isEclipseSave ? `Loaded legacy Eclipse save for \"${ key }\"` : isDelta ? `Loaded Delta save for \"${ key }\".` : `Loaded battery save for \"${ key }\".`,\n                        closeTimeout: 2000\n                      }).open();\n                      document.body.removeChild(el);\n                    };\n                    reader.onerror = e => {\n                      this.$app.toast.create({\n                        text: isEclipseSave ? `Could not load legacy Eclipse save file.` : isDelta ? `Could not load Delta save file.` : `Could not load battery save file.`,\n                        closeTimeout: 2000\n                      }).open();\n                      console.log('Error: ', e);\n                      document.body.removeChild(el);\n                    };\n                  } else {\n                    this.$app.dialog.alert(`Invalid file type. Please upload an .eclipsesave_* or .sav file.`);\n                  }\n                };\n                document.body.appendChild(el);\n                el.click();\n              }\n            },\n            hasData && {\n              text: 'Delete Save',\n              color: 'red',\n              onClick: () => {\n                this.$app.dialog.confirm('Are you sure you want to delete this save? This action cannot be undone.', 'Delete Save', () => {\n                  localStorage.removeItem(key);\n                  this.$setState(getSaves());\n                });\n              }\n            }\n          ].filter(Boolean),\n          [{\n              text: 'Cancel',\n              bold: true\n            }]\n        ]\n      }).open();\n    }\n  },\n  id: '66364809f7',\n  render() {\n    return `\n    <div class=\"page\">\n        <div class=\"navbar\">\n            <div class=\"navbar-inner sliding\">\n                <div class=\"left\">\n                    <a href=\"#\" class=\"link back\">\n                        <i class=\"icon icon-back\"></i>\n                        <span class=\"ios-only\">Back</span>\n                    </a>\n                </div>\n                <div class=\"title\">Game Saves</div>\n                <div class=\"title-large\">\n                    <div class=\"title-large-text\">Game Saves</div>\n                </div>\n            </div>\n        </div>\n        <div class=\"page-content\">\n            <div class=\"block block-strong\">\n                <h3>What are these names?</h3>\n                <p>\n                    These may look like random names, but they aren't. They're basically the game's cartridge ID.\n                    Some, you can easily tell what they are, others not so much. There isn't much we can do to make\n                    them more identifiable. You can also just upload a ROM to download its save file.\n                </p>\n            </div>\n            <div class=\"block-title\">Saves from a ROM</div>\n            <div class=\"list\">\n                <ul>\n                    <li>\n                        <a class=\"item-link list-button\" @click=\"handleUpload\">Upload a Game</a>\n                    </li>\n                </ul>\n            </div>\n            <div class=\"block-footer\">Uploading a ROM will get its ID for you and let you upload or download its save file.</div>\n            <div class=\"block-title\">Saves for Uploaded Games</div>\n            <div class=\"list\">\n                <ul>\n                    ${ this.saves.map(([key]) => `\n                    <li>\n                        <div class=\"item-content\">\n                            <div class=\"item-inner\">\n                                <div class=\"item-title\">\n                                    ${ key }\n                                </div>\n                                <div class=\"after\">\n                                    <button @click=\"showPopupForKey('${ key }').bind(this)\" class=\"tint-colored-text button\">\n                                        <i class=\"f7-icons\">more_fill</i>\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </li>\n                    `).join('') }\n                </ul>\n            </div>\n            <div class=\"block-footer\">Looking for saves for games in your library? Tap hold or right click on a game to access them.</div>\n        </div>\n    </div>\n`;\n  },\n  styleScoped: false\n};"],"sourceRoot":""}